import io.franzbecker.gradle.lombok.task.DelombokTask

import java.time.Instant

plugins {
    id 'java'
    id "com.github.johnrengelman.shadow" version "7.1.2"
    id 'java-library'
    id 'io.franzbecker.gradle-lombok' version '5.0.0'
}

group 'io.ib67'
version properties.get("version")

repositories {
    mavenCentral()
}
dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    compileOnly 'org.jetbrains:annotations:23.0.0'
}

test {
    useJUnitPlatform()
}
/*
  Java
 */
def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

jar {
    manifest {
        attributes(Map.of(
                "Main-Class", "io.ib67.gradi.GradiBoot",
        ))
    }
}
/*
  Lombok
 */
lombok {
    version = "1.18.24"
}

task delombok(type: DelombokTask, dependsOn: compileJava) {
    ext.outputDir = file("$buildDir/delombok")
    outputs.dir(outputDir)
    sourceSets.main.java.srcDirs.each {
        inputs.dir(it)
        args(it, "-d", outputDir)
    }
    doFirst {
        outputDir.deleteDir()
    }
}
/*
  Javadoc
 */
javadoc.options.addStringOption('Xdoclint:none', '-quiet')
javadoc {
    title("${project.name} JavaDoc v${project.version}")
    exclude Set.of('**/internal/**', '**/impl/**', '**Impl', 'Simple**')
    dependsOn delombok
    source = delombok.outputDir
    failOnError = false
}
/*
 Misc: Some stuff for build info generation
 */

def getCheckedOutGitCommitHash() {
    def gitFolder = "$projectDir/.git/"
    def takeFromHash = 7
    /*
     * '.git/HEAD' contains either
     *      in case of detached head: the currently checked out commit hash
     *      otherwise: a reference to a file containing the current commit hash
     */
    def head = new File(gitFolder + "HEAD").text.split(":") // .git/HEAD
    def isCommit = head.length == 1 // e5a7c79edabbf7dd39888442df081b1c9d8e88fd
    // def isRef = head.length > 1     // ref: refs/heads/master

    if (isCommit) return head[0].trim().take(takeFromHash) // e5a7c79edabb

    def refHead = new File(gitFolder + head[1].trim()) // .git/refs/heads/master
    refHead.text.trim().take takeFromHash
}

def buildDate = Instant.now().toString()
def buildBy = System.getProperty("user.name")
def commitHash = getCheckedOutGitCommitHash()

/*
  Spigot Settings
 */
repositories {
    maven {
        name = 'spigotmc-repo'
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    maven {
        url = "https://jitpack.io"
    }
}

